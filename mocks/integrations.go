// Code generated by MockGen. DO NOT EDIT.
// Source: ./integrations.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/ffelipelimao/excel-go/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockGameIntegration is a mock of GameIntegration interface.
type MockGameIntegration struct {
	ctrl     *gomock.Controller
	recorder *MockGameIntegrationMockRecorder
}

// MockGameIntegrationMockRecorder is the mock recorder for MockGameIntegration.
type MockGameIntegrationMockRecorder struct {
	mock *MockGameIntegration
}

// NewMockGameIntegration creates a new mock instance.
func NewMockGameIntegration(ctrl *gomock.Controller) *MockGameIntegration {
	mock := &MockGameIntegration{ctrl: ctrl}
	mock.recorder = &MockGameIntegrationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGameIntegration) EXPECT() *MockGameIntegrationMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockGameIntegration) Get() ([]domain.Game, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].([]domain.Game)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGameIntegrationMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGameIntegration)(nil).Get))
}
